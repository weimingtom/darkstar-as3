<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
    xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"
    applicationComplete="init()" 
    currentState="login"
    width="500" height="400" backgroundColor="#990000" viewSourceURL="srcview/index.html">
    <mx:Script>
        <![CDATA[
        	import com.alienos.sgs.as3.client.ClientChannel;
        	import mx.collections.ArrayCollection;
        	import com.alienos.sgs.as3.client.SgsEvent;
            import com.alienos.sgs.as3.client.SimpleClient;
            
            private var client:SimpleClient = new SimpleClient("localhost", 1139);


			[Bindable] 
			private var channels:ArrayCollection = new ArrayCollection();

            private function init():void
            {            	
                //Registers an event handler to make the enter key work nicely
                stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
               
              	client.addEventListener(SgsEvent.LOGIN_SUCCESS, onLoginSuccess);
              	client.addEventListener(SgsEvent.LOGIN_FAILURE, onLoginFailure);
              	client.addEventListener(SgsEvent.LOGIN_REDIRECT, onLoginRedirect);
              	client.addEventListener(SgsEvent.SESSION_MESSAGE, onSessionMessage);
              	client.addEventListener(SgsEvent.LOGOUT, onLogout);
              	client.addEventListener(SgsEvent.CHANNEL_JOIN, onChannelJoin);
              	client.addEventListener(SgsEvent.CHANNEL_MESSAGE, onChannelMessage);
              	client.addEventListener(SgsEvent.CHANNEL_LEAVE, onChannelLeave);
                
                var fakeId:ByteArray = new ByteArray();
                fakeId.writeShort(-1);
                fakeId.position=0;
                //This is a fake channel, just for the ui widget                
               	channels.addItem(new ClientChannel("Direct",fakeId));
            }
            
            public function onLoginSuccess(event:SgsEvent):void  {
            	trace("onLoginSuccess");
                application.currentState = 'online';
            }
            
            public function onLoginFailure(event:SgsEvent):void  {
            	trace("onLoginFailure:" + event.failureMessage);
            }    
            
            public function onLoginRedirect(event:SgsEvent):void  {
            	trace("onLoginRedirect:" + event.host + " :" + event.port);
            }               
            
            public function onSessionMessage(e:SgsEvent):void {
            	var buf:ByteArray = e.sessionMessage;
            	var message:String = buf.readUTFBytes(buf.bytesAvailable);
            	trace("onSessionMessage: [" +message+"]");
            	chat.text += message;
            	chat.text += "\n";
            }    
            
            public function onLogout(e:SgsEvent):void {
            	trace("onLogout()");
            	application.currentState = 'login';
            }    

			public function onChannelJoin(e:SgsEvent):void {
				chat.text += "##### CHANNEL JOIN [" + e.channel.name + "] ID["+e.channel.id+"]\n";
				channels.addItem(e.channel);
			}

			public function onChannelMessage(e:SgsEvent):void {
				var buf:ByteArray = e.channelMessage;
            	var message:String = buf.readUTFBytes(buf.bytesAvailable);	
				chat.text += "[" + e.channel.name +"]: "+message+"\n" ;	            			
			}
			
			public function onChannelLeave(e:SgsEvent):void {
				chat.text += "##### CHANNEL LEAVE [" + e.channel.name + "] ID["+e.channel.id+"]\n";
				channels.removeItemAt(channels.getItemIndex(e.channel));
			}			

            public function onKeyDown(event:KeyboardEvent) :void
            {
                //Click it, don't ticket!
                if(event.keyCode == 13)
                {
                    if(application.currentState=='login')
                    {
                        login();
                    }
                    else
                    {
                        send();
                    }
                }
            }
            
            private function login():void
            {    
                
                client.login(usernameField.text,"bogus");
                usernameField.text="";
            }
                          
            private function send():void {
            	var buf:ByteArray = new ByteArray();
                var input:String = chatInput.text;
                chatInput.text="";
                
                if(input == "/quit") {
                	client.logout();
                }
                else 
                {
                	var channel:ClientChannel = channelSelect.selectedItem as ClientChannel;
                   	buf.writeUTFBytes(input);
                               	
                	//If fake channel
                	if(channel.id == -1) {
                		client.sessionSend(buf);		
                	}	
                	else
                	{
                		client.channelSend(channel,buf);
                	}           	
                }          
            }
        ]]>
    </mx:Script>
    <mx:states>
        <mx:State name="login">
            <mx:AddChild position="lastChild">
                <mx:Panel id="loginPanel" x="58.5" y="96" width="383" height="200" layout="absolute" title="Login">
                    <mx:TextInput id="usernameField" x="101" y="40"/>
                    <mx:Label x="10" y="42" text="Username" width="83" fontSize="12"/>
                    <mx:Button id="loginButton" x="288" y="115" label="Login" height="35" click="login()"/>
                </mx:Panel>
            </mx:AddChild>
        </mx:State>
        <mx:State name="online">
            <mx:AddChild position="lastChild">
                <mx:Panel id="onlinePanel" x="10" y="10" width="480" height="380" layout="absolute" title="Alien/OS Darkstar Actionscript Client SDK Demo">
                    <mx:TextArea id="chat" x="10" y="10" width="440" height="290" 
                        backgroundColor="#000000" color="#FFFFFF" cornerRadius="8"
                        verticalScrollPolicy="auto"
                        valueCommit="chat.verticalScrollPosition = chat.maxVerticalScrollPosition"/>
                    <mx:Button x="396" y="308" label="Send" click="send()"/>
                    <mx:TextInput id="chatInput" x="127" y="307" width="261" fontSize="12" cornerRadius="8"/>
                    <mx:ComboBox id="channelSelect" x="10" y="308" width="109" dataProvider="{channels}" labelField="name"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:RemoveChild target="{loginPanel}"/>
        </mx:State>
    </mx:states>
</mx:Application>
